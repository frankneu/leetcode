package main

/**
https://leetcode.com/problems/keys-and-rooms/
*/
func canVisitAllRooms(rooms [][]int) bool {
	open := make(map[int]int)
	open[0] = 1
	keys := make(map[int]int)
	for i := 0; i < len(rooms[0]); i++ {
		keys[rooms[0][i]] = 1
	}
	for len(keys) != 0 {
		for k, _ := range keys {
			delete(keys, k)
			open[k] = 1
			key := rooms[k]
			for i := 0; i < len(key); i++ {
				if _, ok := open[key[i]]; ok {
					continue
				} else {
					keys[key[i]] = 1
				}
			}
		}
	}
	return len(open) == len(rooms)
}

func main() {
	println(canVisitAllRooms([][]int{{1}, {2}, {3}, {}}), true)
	println(canVisitAllRooms([][]int{{87}, {33}, {16, 82, 7, 41}, {}, {55, 29}, {12}, {3, 84, 28, 56, 66}, {}, {44, 72}, {78}, {67, 90}, {30, 81, 88}, {2, 70, 77}, {23, 27}, {26}, {25, 48}, {19, 38, 58, 39, 70}, {51}, {8, 92, 43}, {}, {24}, {}, {69, 79, 36, 61, 69}, {95}, {85}, {21, 28, 62, 66, 73}, {36, 53, 35, 52}, {14, 34}, {20, 49}, {4}, {40, 51, 96}, {74, 76}, {13, 71, 80, 81}, {42, 97, 31, 68}, {}, {18, 46, 83, 91}, {15}, {9}, {22}, {47, 54}, {65, 98, 34}, {31}, {9, 18, 55, 94}, {57}, {45, 77, 32}, {32, 25}, {24, 59, 14, 42, 63}, {37, 75, 98}, {5, 20, 99, 30}, {15, 76, 96}, {83, 89, 12, 46}, {65, 71}, {10}, {8, 45, 58}, {10, 49, 89}, {26, 27, 78, 1, 38, 50}, {}, {}, {23, 62}, {57}, {85}, {13, 53}, {93, 4, 40}, {91, 82, 99}, {50}, {}, {}, {64, 2, 11, 37}, {88}, {29, 43}, {11}, {93, 95}, {}, {35}, {73, 92}, {63, 80}, {39}, {1, 60, 86, 5}, {}, {41, 56, 47}, {54}, {33, 44, 97}, {3, 48, 86}, {19}, {87}, {6, 52}, {75, 84}, {90, 16}, {94, 21, 79}, {67}, {61, 64}, {}, {}, {17, 59}, {17}, {68}, {72, 6}, {7}, {74}, {22, 60}}), true)
}
